name: Build and Package CLI

on:
  push:
    branches:
      - feat/testing
  pull_request:
    branches:
      - main

jobs:
  build-cli:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository/cli
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build
      run: |
        cd ./cli
        mvn clean install -DskipTests

    - name: Upload JAR
      uses: actions/upload-artifact@v4
      with:
        name: task-time-tracker-cli
        path: ./cli/target/*.jar


  release:
    needs: build-cli
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download zip artifact from the build job
        uses: actions/download-artifact@v4
        with:
          name: task-time-tracker-cli

      - name: Get Git Commit SHA
        id: get_sha
        run: echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: ${{ env.COMMIT_SHA }}
          release_name: "Release CLI-${{ env.COMMIT_SHA }} "
          body: "This is the release for commit ${{ env.COMMIT_SHA }}"
          draft: false
          prerelease: false

      - name: List target directory
        run: ls -al ./cli/target/

      # Upload production artifact to release
      - name: Upload production artifact to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cli/target/*.jar
          asset_name: task-time-tracker-cli
          asset_content_type: application/jar
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}