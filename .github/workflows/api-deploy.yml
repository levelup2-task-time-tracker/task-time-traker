name: Deploy Spring Boot to EC2

on:
  workflow_dispatch:
  push:
    branches:
      - main 

jobs:
  build_and_deploy:
    name: Build and Deploy Spring Boot App
    runs-on: ubuntu-latest
    env:
      DB_URL: ${{ secrets.DB_URL }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      OAUTH2_ID: ${{ secrets.OAUTH2_ID }}
      OAUTH2_SECRET: ${{ secrets.OAUTH2_SECRET }} 


    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Build Spring Boot app
        run: |
            cd api
            mvn clean package -DskipTests 

      - name: EC2 Private Key from GitHub Secrets 
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private-key.pem
          chmod 400 private-key.pem

      - name: Upload .jar file to EC2 using SCP
        run: |
          echo "Uploading JAR to EC2 file using SCP"
          scp -i private-key.pem -o StrictHostKeyChecking=no api/target/*.jar ec2-user@${{ secrets.EC2_PUBLIC_IP }}:/home/ec2-user/app/     

      - name: Run Spring Boot Application
        uses: appleboy/ssh-action@v0.1.10
        env:
          DB_URL: ${{ env.DB_URL }}
          DB_USERNAME: ${{ env.DB_USERNAME }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          OAUTH2_ID: ${{ env.OAUTH2_ID }}
          OAUTH2_SECRET: ${{ env.OAUTH2_SECRET }}
          host: ${{ secrets.EC2_PUBLIC_IP }}
        with:
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22  
          script: |
            cd /home/ec2-user/app
            chmod +x *.jar
            nohup java -jar *.jar > /home/ec2-user/app/springboot-app.log 2>&1 &
       

  